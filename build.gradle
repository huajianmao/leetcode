
buildscript {
  repositories {
    mavenCentral()
  }
  dependencies {
  }
}

plugins {
  id 'java'
  id 'checkstyle'
  id 'application'
  id 'idea'
  id 'jacoco'
  id 'com.github.kt3k.coveralls' version '2.8.2'
  id "org.sonarqube" version "2.7"
}

group = 'cn.hjmao.leetcode'
version = '0.0.1-SNAPSHOT'

description = """"""

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
  mavenCentral()
}

dependencies {
  compile(
    ['com.squareup.okhttp3:okhttp:3.14.1'],
    ['org.jsoup:jsoup:1.11.3'],
    ['org.json:json:20180813']
  )

  testCompile(
    ['org.testng:testng:6.14.3']
  )
}

sourceSets {
  main {
    runtimeClasspath = files(output.resourcesDir) + runtimeClasspath
  }
  test {
    runtimeClasspath = files(output.resourcesDir) + runtimeClasspath
  }
}

compileJava {
  options.compilerArgs << '-Xlint:unchecked'
}

checkstyle {
  toolVersion = '6.19'
  configDir = file("$rootProject.projectDir/config/checkstyle")
}

test {
  useTestNG() {
    useDefaultListeners = true
  }
  testLogging {
    events "failed" //, "passed", "skipped", "standardOut", "standardError"
    afterSuite { desc, result ->
      if (!desc.parent) {
        println "Results: ${result.resultType} (${result.testCount} tests, ${result.successfulTestCount} successes, ${result.failedTestCount} failures, ${result.skippedTestCount} skipped)"
      }
    }
  }
}

jacocoTestReport {
  reports {
    xml.enabled = true
  }
  afterEvaluate {
//    getClassDirectories().setFrom(
    classDirectories = files(classDirectories.files.collect {
      fileTree(dir: it, exclude: '**/com/leetcode/**')
    })
//    )
  }
}

coveralls {
  jacocoReportPath 'build/reports/jacoco/test/jacocoTestReport.xml'
}

mainClassName = group + ".Main"
